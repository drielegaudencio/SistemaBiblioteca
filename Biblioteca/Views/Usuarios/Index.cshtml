@model IEnumerable<Biblioteca.Models.Usuario>

@{
    ViewData["Title"] = "Usuários";
}

<link rel="stylesheet" href="~/css/_FormStyles.css" />

<h1 class="text-3xl font-bold text-gray-800 mb-6">Gestão de Usuários</h1>

<div class="flex justify-between items-start mb-4 flex-wrap">
    <div class="nav-links-secondary flex flex-col mb-4 md:mb-0">
        <a asp-action="List" class="btn-back">
            <svg class="h-5 w-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path></svg>
            Listar Usuários
        </a>
        <a asp-action="Create" class="btn-back">
            <svg class="h-5 w-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path></svg>
            Adicionar Novo Usuário
        </a>
        <a asp-action="Search" class="btn-back">
            @* <a href="#" class="flex items-center" onclick="alert('Funcionalidade de Pesquisa ainda não implementada para esta página. Use o campo de busca abaixo.'); return false;"> *@
            <svg class="h-5 w-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg>
            Pesquisar Usuário
        </a>
    </div>
    

    @* <div class="search-container ml-auto"> *@
    @*     <input type="text" id="searchInput" class="search-input" placeholder="Buscar por nome ou CPF..." /> *@
    @*     <button type="button" class="search-button" onclick="performSearch()">Buscar</button> *@
    @* </div> *@
</div>
@* 
<div class="table-container">
    <table class="data-table">
        <thead>
            <tr>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Nome)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Cpf)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Cargo)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Salario)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Telefone)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Email)
                </th>
                <th scope="col" class="text-right">
                    <span>Ações</span>
                </th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="font-medium">
                            @Html.DisplayFor(modelItem => item.Nome)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Cpf)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Cargo)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Salario)
                        </td>
                        <td>
                            @(string.IsNullOrEmpty(item.Telefone) ? "N/A" : item.Telefone)
                        </td>
                        <td>
                            @(string.IsNullOrEmpty(item.Email) ? "N/A" : item.Email)
                        </td>
                        <td class="text-right">
                            <a asp-action="Edit" asp-route-id="@item.Id" class="action-link edit">Editar</a>
                            <a asp-action="Details" asp-route-id="@item.Id" class="action-link details">Detalhes</a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="action-link delete">Excluir</a>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="7" class="text-center text-sm text-gray-500 py-4">Nenhum Usuario encontrado. Adicione um novo Usuario!</td>
                </tr>
            }
        </tbody>
    </table> 
</div>*@

@section Scripts {
    <script>
        function performSearch() {
            var searchTerm = document.getElementById('searchInput').value;
            // Aqui você implementaria a lógica de busca.
            // Por exemplo, redirecionar para uma action de busca no controlador:
            window.location.href = '@Url.Action("Index", "Funcionarios")?search=' + encodeURIComponent(searchTerm);
            // Ou, se você quiser filtrar na tela sem recarregar, usaria AJAX/Fetch API
            // para chamar uma API e atualizar a tabela dinamicamente.
        }

        // Opcional: Adicionar funcionalidade de busca ao pressionar Enter
        document.getElementById('searchInput').addEventListener('keypress', function(event) {
            if (event.key === 'Enter') {
                performSearch();
            }
        });
    </script>
}

@* @model IEnumerable<Biblioteca.Models.Usuario>

@{
    ViewData["Title"] = "Index";
}
<link rel="stylesheet" href="~/css/_ListStyle.css" />
<h1>Tela de Usuários</h1>

<p>
    <a asp-action="Create" class="add-new">Adicionar Novo Usuário</a>
</p>
<div class="container">
    <table class="data-table">
        <thead>
            <tr>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.AssinaturaAtual)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Nome)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Cpf)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Endereco)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Telefone)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Email)
                </th>
                <th scope="col" class="text-right">
                    <span>Ações</span>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.AssinaturaAtual.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Nome)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Cpf)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Endereco)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Telefone)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td class="text-right">
                        <a asp-action="Edit" asp-route-id="@item.Id" class="action-link edit">Editar</a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="action-link details">Detalhes</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="action-link delete">Excluir</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

</div>
 *@