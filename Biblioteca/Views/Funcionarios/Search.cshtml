@model Biblioteca.ViewModels.FuncionarioSearchResultViewModel

@{
    ViewData["Title"] = "Buscar Funcionário";
}

<style>
    /* wwwroot/css/_FormStyles.css */

    /* Variáveis de cores para consistência */
    :root {
        --primary-indigo: #4F46E5; /* indigo-600 */
        --primary-indigo-dark: #4338CA; /* indigo-700 */
        --primary-indigo-darker: #3730A3; /* indigo-800 */
        --text-gray-900: #111827; /* gray-900 */
        --text-gray-700: #374151; /* gray-700 */
        --border-gray-300: #D1D5DB; /* gray-300 */
        --red-600: #DC2626; /* red-600 */
        --red-800: #991B1B; /* red-800 */
        --green-600: #16A34A; /* green-600 */
        --orange-600: #EA580C; /* orange-600 */
        --bg-gray-50: #F9FAFB; /* gray-50 */
        --bg-gray-100: #F3F4F6; /* gray-100 */
    }

    /* Estilo para o título principal (se for comum em todas as páginas de formulário) */
    .form-page-title {
        color: var(--text-gray-900);
        font-size: 2.25rem; /* 3xl */
        font-weight: 700; /* bold */
        margin-bottom: 1.5rem; /* mb-6 */
    }

    /* Contêiner principal do formulário */
    .form-container {
        background-color: white;
        padding: 2rem; /* p-8 */
        border-radius: 0.5rem; /* rounded-lg */
        box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06); /* shadow-md */
        max-width: 32rem; /* max-w-lg */
        margin-left: auto;
        margin-right: auto;
    }

    /* Estilo para cada grupo de formulário (label + input + validação) */
    .form-group {
        margin-bottom: 1rem; /* mb-4 */
    }

    /* Estilo para labels */
    .control-label {
        display: block;
        font-size: 0.875rem; /* text-sm */
        font-weight: 500; /* font-medium */
        color: var(--text-gray-700);
        margin-bottom: 0.25rem; /* mb-1 */
    }

    /* Estilo para inputs de formulário */
    .form-control {
        display: block;
        width: 100%; /* w-full */
        border: 1px solid var(--border-gray-300);
        border-radius: 0.375rem; /* rounded-md */
        box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05); /* shadow-sm */
        padding: 0.5rem 0.75rem; /* py-2 px-3 */
        font-size: 0.875rem; /* sm:text-sm */
        color: var(--text-gray-900);
        transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    }

        .form-control:focus {
            outline: none;
            border-color: var(--primary-indigo);
            box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.25); /* focus:ring-indigo-500, focus:border-indigo-500 */
        }

    /* Estilo para mensagens de validação */
    .text-danger {
        color: var(--red-600);
        font-size: 0.75rem; /* text-xs */
        margin-top: 0.25rem; /* mt-1 */
        display: block;
    }

    /* Estilo para o sumário de validação (topo do formulário) */
    .validation-summary-errors {
        color: var(--red-600);
        margin-bottom: 1rem; /* mb-4 */
        font-weight: 500;
    }

    /* Estilo para botões de submissão */
    .btn-submit {
        display: inline-flex;
        justify-content: center;
        align-items: center; /* Alinha o ícone e texto verticalmente */
        padding: 0.5rem 1rem; /* py-2 px-4 */
        border: 1px solid transparent;
        box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05); /* shadow-sm */
        font-size: 0.875rem; /* text-sm */
        font-weight: 500; /* font-medium */
        border-radius: 0.375rem; /* rounded-md */
        color: white;
        background-color: var(--primary-indigo);
        transition: background-color 0.2s ease-in-out, transform 0.2s ease-in-out;
        cursor: pointer; /* Adicionado para indicar clicável */
    }

        .btn-submit:hover {
            background-color: var(--primary-indigo-dark);
            transform: translateY(-1px);
        }

        .btn-submit:focus {
            outline: none;
            box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.5);
        }

    /* Estilo para botão de "Voltar" */
    .btn-back {
        display: inline-flex;
        align-items: center;
        padding: 0.5rem 1rem;
        border: 1px solid var(--border-gray-300);
        border-radius: 0.375rem;
        box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
        font-size: 0.875rem;
        font-weight: 500;
        color: var(--text-gray-700);
        background-color: white;
        transition: background-color 0.2s ease-in-out;
    }

        .btn-back:hover {
            background-color: var(--bg-gray-50); /* gray-50 */
        }

        .btn-back:focus {
            outline: none;
            box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.5);
        }

    /* Layout dos botões no final do formulário */
    .form-actions {
        display: flex;
        justify-content: flex-end;
        gap: 0.75rem; /* space-x-3 */
        margin-top: 1.5rem; /* mt-6 */
    }

    /* --- Novos estilos para o layout de duas colunas (Livro Create) --- */
    .two-column-layout {
        display: flex;
        flex-wrap: wrap; /* Permite que as colunas quebrem em telas menores */
        gap: 2rem; /* Espaço entre as colunas */
        align-items: flex-start; /* Alinha o topo das colunas */
    }

    .column-left {
        flex: 1; /* Ocupa o espaço restante */
        min-width: 20rem; /* Largura mínima para evitar que encolha demais */
    }

    .column-right {
        flex: 1; /* Ocupa o espaço restante */
        min-width: 20rem; /* Largura mínima */
        background-color: white;
        padding: 2rem;
        border-radius: 0.5rem;
        box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
    }

    .search-section h2 {
        font-size: 1.5rem; /* text-2xl */
        font-weight: 600; /* semibold */
        color: var(--text-gray-900);
        margin-bottom: 1rem;
    }

    .search-input-group {
        display: flex;
        gap: 0.5rem; /* Espaço entre input e botão */
        margin-bottom: 1rem;
        align-items: flex-end; /* Alinha o botão e o input */
    }

        .search-input-group .form-control { /* Reutiliza o estilo do input de formulário */
            flex-grow: 1;
        }

    .search-button-custom { /* Para o botão de busca da Open Library */
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0.5rem 1rem;
        border: 1px solid transparent;
        border-radius: 0.375rem;
        box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
        font-size: 0.875rem;
        font-weight: 500;
        color: white;
        background-color: var(--primary-indigo);
        transition: background-color 0.2s ease-in-out;
        cursor: pointer;
    }

        .search-button-custom:hover {
            background-color: var(--primary-indigo-dark);
        }

        .search-button-custom:focus {
            outline: none;
            box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.5);
        }

    .results-viewer { /* Para o visor de resultados da Open Library */
        margin-top: 1.5rem;
        max-height: 400px; /* Altura máxima para o scroll */
        overflow-y: auto; /* Adiciona barra de rolagem vertical */
        border: 1px solid var(--border-gray-300);
        border-radius: 0.375rem;
        padding: 1rem;
        background-color: var(--bg-gray-50);
    }

        .results-viewer .book-result-item {
            background-color: white;
            border-radius: 0.375rem;
            padding: 0.75rem;
            margin-bottom: 0.75rem;
            box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
            cursor: pointer;
            transition: background-color 0.2s ease-in-out, transform 0.2s ease-in-out;
        }

            .results-viewer .book-result-item:hover {
                background-color: #F0F4FF; /* indigo-50 light */
                transform: translateY(-2px);
            }

            .results-viewer .book-result-item h3 {
                font-size: 1rem;
                font-weight: 600;
                color: var(--text-gray-900);
                margin-bottom: 0.25rem;
            }

            .results-viewer .book-result-item p {
                font-size: 0.875rem;
                color: var(--text-gray-700);
                margin-bottom: 0.25rem;
            }

                .results-viewer .book-result-item p:last-child {
                    margin-bottom: 0;
                }

    .loading-indicator {
        text-align: center;
        padding: 1rem;
        color: var(--text-gray-700);
        font-style: italic;
    }

    /* --- Novos estilos para a página de Busca de Funcionário --- */
    .search-page-container {
        background-color: white;
        padding: 2rem;
        border-radius: 0.5rem;
        box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
        max-width: 960px; /* Largura máxima para centralizar e organizar */
        margin: 2rem auto; /* Centraliza na página */
    }

    .search-form-section {
        margin-bottom: 2rem;
        padding-bottom: 1.5rem;
        border-bottom: 1px solid var(--border-gray-300);
    }

    .results-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr)); /* 3 colunas responsivas */
        gap: 1.5rem; /* Espaçamento entre as caixas */
    }

    .results-box {
        border: 1px solid var(--border-gray-300);
        border-radius: 0.5rem;
        padding: 1rem;
        background-color: var(--bg-gray-50);
        box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
        display: flex;
        flex-direction: column; /* Para que o conteúdo se expanda e o scroll funcione */
    }

        .results-box h3 {
            font-size: 1.25rem; /* text-xl */
            font-weight: 600;
            color: var(--text-gray-900);
            margin-bottom: 1rem;
            padding-bottom: 0.5rem;
            border-bottom: 1px solid var(--border-gray-300);
        }

    .results-content {
        flex-grow: 1; /* Permite que o conteúdo preencha o espaço disponível */
        max-height: 250px; /* Altura máxima para o scroll */
        overflow-y: auto; /* Adiciona barra de rolagem */
        padding-right: 0.5rem; /* Para evitar que o scrollbar "corte" o texto */
    }

        .results-content p {
            font-size: 0.9rem;
            color: var(--text-gray-700);
            margin-bottom: 0.5rem;
        }

            .results-content p:last-child {
                margin-bottom: 0;
            }

    /* Estilos para os itens dentro das listas (assinaturas, empréstimos) */
    .item-card {
        background-color: white;
        border: 1px solid var(--bg-gray-100);
        border-radius: 0.375rem;
        padding: 0.75rem;
        margin-bottom: 0.75rem;
        box-shadow: 0 0px 1px 0 rgba(0, 0, 0, 0.05);
    }

        .item-card:last-child {
            margin-bottom: 0;
        }

    /* Cores de status */
    .text-green-600 {
        color: var(--green-600);
        font-weight: 500;
    }

    .text-red-600 {
        color: var(--red-600);
        font-weight: 500;
    }

    .text-orange-600 {
        color: var(--orange-600);
        font-weight: 500;
    }

    /* Estilo para o botão fixo no canto inferior direito */
    .fixed-bottom-right {
        position: fixed; /* Fixa o elemento na tela */
        bottom: 1.5rem; /* Distância da parte inferior */
        right: 1.5rem; /* Distância da parte direita */
        z-index: 1000; /* Garante que fique acima de outros elementos */
    }

</style>
@* <link rel="stylesheet" href="~/css/_FormStyles.css" /> *@
<h1 class="form-page-title">Buscar Funcionário</h1>

<div class="search-page-container">
    <div class="search-form-section">
        <label for="searchFuncionarioInput" class="control-label">Pesquisar por Nome ou Matrícula:</label>
        <div class="search-input-group">
            <input type="text" id="searchFuncionarioInput" class="form-control" placeholder="Digite o nome ou matrícula..." />
            <button type="button" id="searchFuncionarioBtn" class="btn-submit">
                <svg class="h-5 w-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg>
                Pesquisar
            </button>
        </div>
        <p id="searchMessage" class="text-danger mt-2"></p>
    </div>

    <div id="loadingIndicator" class="loading-indicator" style="display:none;">Carregando informações...</div>

    <div class="results-grid">
        <div class="results-box personal-info-box">
            <h3>Informações Pessoais</h3>
            <div id="personalInfoContent" class="results-content">
                <p>Nenhum funcionário selecionado.</p>
            </div>
        </div>

        <div class="results-box subscriptions-box">
            <h3>Assinaturas</h3>
            <div id="subscriptionsContent" class="results-content">
                <p>Nenhuma assinatura encontrada.</p>
                <textarea id="AssinaturasRealizadas" ></textarea>
            </div>
        </div>

        <div class="results-box loans-box">
            <h3>Empréstimos</h3>
            <div id="loansContent" class="results-content">
                <p>Nenhum empréstimo encontrado.</p>
            </div>
        </div>
    </div>
    <div class="fixed-bottom-right">
        <a asp-action="Index" class="btn-back">
            Voltar
        </a>
    </div>
</div>


@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const searchInput = document.getElementById('searchFuncionarioInput');
            const searchButton = document.getElementById('searchFuncionarioBtn');
            const searchMessage = document.getElementById('searchMessage');
            const loadingIndicator = document.getElementById('loadingIndicator');
            const personalInfoContent = document.getElementById('personalInfoContent');
            const subscriptionsContent = document.getElementById('subscriptionsContent');
            const loansContent = document.getElementById('loansContent');

            searchButton.addEventListener('click', performSearch);
            searchInput.addEventListener('keypress', function (e) {
                if (e.key === 'Enter') {
                    performSearch();
                }
            });

            async function performSearch() {
                const searchTerm = searchInput.value.trim();
                if (searchTerm === '') {
                    searchMessage.textContent = "Por favor, digite um nome ou matrícula para pesquisar.";
                    resetResultDisplays();
                    return;
                }

                searchMessage.textContent = ""; // Clear previous messages
                loadingIndicator.style.display = 'block'; // Show loading indicator
                resetResultDisplays(); // Clear previous results before new search

                try {
                    const response = await fetch(`@Url.Action("SearchApi", "Funcionarios")?termoBusca=${encodeURIComponent(searchTerm)}`);

                    if (!response.ok) {
                        if (response.status === 404) {
                            searchMessage.textContent = "Funcionário não encontrado.";
                        } else {
                            const errorData = await response.json();
                            searchMessage.textContent = `Erro: ${errorData.message || response.statusText}`;
                        }
                        return;
                    }

                    const data = await response.json();
                    displayResults(data);

                } catch (error) {
                    console.error('Erro ao buscar funcionário:', error);
                    searchMessage.textContent = "Ocorreu um erro ao realizar a busca. Tente novamente.";
                } finally {
                    loadingIndicator.style.display = 'none'; // Hide loading indicator
                }
            }

            function displayResults(data) {
                // Display Personal Info
                if (data.funcionario) {
                    personalInfoContent.innerHTML = `
                        <p><strong>Nome:</strong> ${data.funcionario.nome}</p>
                        <p><strong>Matrícula:</strong> ${data.funcionario.matricula}</p>
                        <p><strong>Email:</strong> ${data.funcionario.email}</p>
                        <p><strong>Telefone:</strong> ${data.funcionario.telefone}</p>
                    `;
                } else {
                    personalInfoContent.innerHTML = '<p>Nenhuma informação pessoal encontrada.</p>';
                }

                // Display Subscriptions
                if (data.assinaturasRealizadas && data.assinaturasRealizadas.length > 0) {
                    subscriptionsContent.innerHTML = data.assinaturasRealizadas.map(a => `
                        <div class="item-card">
                            <p><strong>Codigo Assinatura:</strong> ${a.id}</p>
                            <p><strong>Usuário: </strong>  ${a.nomeUsuario}</p>
                            <p><strong>Plano:</strong> ${a.plano}</p>
                            <p><strong>Início:</strong> ${a.dataInicio}</p>
                            <p><strong>Fim:</strong> ${a.dataFim}</p>
                            <p><strong>Status:</strong> <span class="${a.ativa ? 'text-green-600' : 'text-red-600'}">${a.ativa ? 'Ativa' : 'Inativa'}</span></p>
                        </div>
                    `).join('');
                } else {
                    subscriptionsContent.innerHTML = '<p>Nenhuma assinatura encontrada.</p>';
                }

                // Display Loans
                if (data.emprestimos && data.emprestimos.length > 0) {
                    loansContent.innerHTML = data.emprestimos.map(e => `
                        <div class="item-card">
                            <p><strong>Livro:</strong> ${e.ExemplarId} (ISBN: ${e.isbnLivro})</p>
                            <p><strong>Empréstimo:</strong> ${e.dataEmprestimo}</p>
                            <p><strong>Devolução Prevista:</strong> ${e.dataDevolucaoPrevista}</p>
                            <p><strong>Devolução Real:</strong> ${e.dataDevolucaoReal}</p>
                            <p><strong>Status:</strong> <span class="${e.devolvido ? 'text-green-600' : 'text-orange-600'}">${e.devolvido ? 'Devolvido' : 'Pendente'}</span></p>
                        </div>
                    `).join('');
                } else {
                    loansContent.innerHTML = '<p>Nenhum empréstimo encontrado.</p>';
                }
            }

            function resetResultDisplays() {
                personalInfoContent.innerHTML = '<p>Nenhum funcionário selecionado.</p>';
                subscriptionsContent.innerHTML = '<p>Nenhuma assinatura encontrada.</p>';
                loansContent.innerHTML = '<p>Nenhum empréstimo encontrado.</p>';
            }
        });
    </script>
}
