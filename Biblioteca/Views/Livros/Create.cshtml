@model Biblioteca.Models.Livro

@{
    ViewData["Title"] = "Adicionar Novo Livro";
}
<link rel="stylesheet" href="~/css/_CreateLivExe.css" />

<h1 class="form-page-title">Adicionar Novo Livro</h1>
<div class="two-column-layout">
    <div class="column-left">
        <div class="form-container">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="validation-summary-errors"></div>

                <div class="form-group">
                    <label asp-for="Titulo" class="control-label">Título:</label>
                    <input asp-for="Titulo" class="form-control" />
                    <span asp-validation-for="Titulo" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Autor" class="control-label">Autor:</label>
                    <input asp-for="Autor" class="form-control" />
                    <span asp-validation-for="Autor" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Isbn" class="control-label">ISBN:</label>
                    <input asp-for="Isbn" class="form-control" />
                    <span asp-validation-for="Isbn" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="GeneroPrincipal" class="control-label">Gênero Principal:</label>
                    <select asp-for="GeneroPrincipal" class="form-control" asp-items="ViewBag.GeneroPrincipal"></select>
                   
                </div>
                <div class="form-group">
                    <label asp-for="AnoPublicacao" class="control-label">Ano de Publicação:</label>
                    <input asp-for="AnoPublicacao" class="form-control" />
                    <span asp-validation-for="AnoPublicacao" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="NumeroPaginas" class="control-label">Número de Páginas:</label>
                    <input asp-for="NumeroPaginas" class="form-control" />
                    <span asp-validation-for="NumeroPaginas" class="text-danger"></span>
                </div>

                <div class="form-actions">
                    <a asp-action="Index" class="btn-back">Voltar para a Lista</a>
                    <input type="submit" value="Criar Livro" class="btn-submit" />
                </div>
            </form>
        </div>
    </div>

    <div class="column-right search-section">
        <h2>Buscar Livro na Open Library</h2>
        <div class="search-input-group">
            <input type="text" id="openLibrarySearchTerm" class="form-control" placeholder="Digite Título ou ISBN..." />
            <button type="button" id="searchOpenLibraryBtn" class="search-button-custom">Buscar</button>
        </div>

        <div id="loadingIndicator" class="loading-indicator" style="display:none;">Carregando resultados...</div>
        <div id="searchResults" class="results-viewer">
            <p class="text-gray-500">Nenhum resultado para exibir. Digite um termo de busca e clique em "Buscar".</p>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const searchButton = document.getElementById('searchOpenLibraryBtn');
            const searchTermInput = document.getElementById('openLibrarySearchTerm');
            const searchResultsDiv = document.getElementById('searchResults');
            const loadingIndicator = document.getElementById('loadingIndicator');

            searchButton.addEventListener('click', performOpenLibrarySearch);
            searchTermInput.addEventListener('keypress', function (e) {
                if (e.key === 'Enter') {
                    performOpenLibrarySearch();
                }
            });

            async function performOpenLibrarySearch() {
                const searchTerm = searchTermInput.value.trim();
                if (searchTerm === '') {
                    searchResultsDiv.innerHTML = '<p class="text-red-600">Por favor, digite um termo de busca (título ou ISBN).</p>';
                    return;
                }

                loadingIndicator.style.display = 'block'; // Mostra o indicador de carregamento
                searchResultsDiv.innerHTML = ''; // Limpa resultados anteriores

                try {
                    // Chama o endpoint do seu controlador LivrosController.SearchOpenLibrary
                    const response = await fetch(`@Url.Action("SearchOpenLibrary", "Livros")?searchTerm=${encodeURIComponent(searchTerm)}`);

                    if (!response.ok) {
                        const errorData = await response.json();
                        searchResultsDiv.innerHTML = `<p class="text-red-600">Erro na busca: ${errorData.message || response.statusText}</p>`;
                        return;
                    }

                    const data = await response.json();

                    if (data.message) { // Se o controller retornar uma mensagem (ex: busca por título não implementada)
                        searchResultsDiv.innerHTML = `<p class="text-gray-700">${data.message}</p>`;
                    } else if (data && data.length > 0) {
                        data.forEach(book => {
                            const bookItem = document.createElement('div');
                            bookItem.classList.add('book-result-item');
                            bookItem.innerHTML = `
                                <h3>${book.title || 'Título Desconhecido'}</h3>
                                <p><strong>Autor:</strong> ${book.authors ? book.authors.join(', ') : 'N/A'}</p>
                                <p><strong>ISBN:</strong> ${book.isbn || 'N/A'}</p>
                                <p><strong>Páginas:</strong> ${book.numberOfPages || 'N/A'}</p>
                                <p><strong>Ano:</strong> ${book.publishYear || 'N/A'}</p>
                            `;
                            // Adiciona evento de clique para preencher o formulário
                            bookItem.addEventListener('click', () => fillFormWithBookData(book));
                            searchResultsDiv.appendChild(bookItem);
                        });
                    } else {
                        searchResultsDiv.innerHTML = '<p class="text-gray-500">Nenhum livro encontrado para o termo fornecido.</p>';
                    }

                } catch (error) {
                    console.error('Erro ao buscar livros na Open Library:', error);
                    searchResultsDiv.innerHTML = '<p class="text-red-600">Ocorreu um erro ao realizar a busca. Tente novamente.</p>';
                } finally {
                    loadingIndicator.style.display = 'none'; // Esconde o indicador de carregamento
                }
            }

            function fillFormWithBookData(book) {
                document.getElementById('Titulo').value = book.title || '';
                document.getElementById('Autor').value = book.authors ? book.authors.join(', ') : '';
                document.getElementById('Isbn').value = book.isbn || '';
                document.getElementById('NumeroPaginas').value = book.numberOfPages || '';
                document.getElementById('AnoPublicacao').value = book.publishYear || '';
                // GeneroPrincipal não está diretamente disponível na Open Library Book API por ISBN,
                // mas você pode tentar extrair do 'subjects' se houver, ou deixar em branco.
                // document.getElementById('GeneroPrincipal').value = book.subjects ? book.subjects[0] : '';

                alert(`Formulário preenchido com dados de "${book.title || 'Livro'}"!`);
            }
        });
    </script>
}



@* @model Biblioteca.Models.Livro

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Livro</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Titulo" class="control-label"></label>
                <input asp-for="Titulo" class="form-control" />
                <span asp-validation-for="Titulo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Autor" class="control-label"></label>
                <input asp-for="Autor" class="form-control" />
                <span asp-validation-for="Autor" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="GeneroPrincipal" class="control-label"></label>
                <input asp-for="GeneroPrincipal" class="form-control" />
                <span asp-validation-for="GeneroPrincipal" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AnoPublicacao" class="control-label"></label>
                <input asp-for="AnoPublicacao" class="form-control" />
                <span asp-validation-for="AnoPublicacao" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Isbn" class="control-label"></label>
                <input asp-for="Isbn" class="form-control" />
                <span asp-validation-for="Isbn" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="NumeroPaginas" class="control-label"></label>
                <input asp-for="NumeroPaginas" class="form-control" />
                <span asp-validation-for="NumeroPaginas" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
 *@